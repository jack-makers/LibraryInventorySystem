@model SearchViewModel
@{
    ViewData["Title"] = "Index";
}

<div>
    <br/>
    <h1 class="display-4"> Search Results: </h1>
    <br/>
    <div>
        <form asp-controller="Search" asp-action="Index" method="get">
            <p>
                @*
                <select asp-for="@Model.Filter" asp-items="@Html.GetEnumSelectList(typeof(Options))">
                </select>
                *@
        
                <input style="width: 50%" type="text" name="SearchString"/>
                <input class="btn btn-sm rounded btn-primary" type="submit" value="Search" />
            </p>
        </form>
    </div>
    <br/>
    <div>
        <table class="table table-striped">
            <thead class="thead bg-primary text-light" style="text-align: center">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Inventories![0].BookTitle)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Inventories![0].AuthorName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Inventories![0].Isbn)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Inventories!)
            {
                @if (item.BookTitle != null && item.BookTitle.Equals(ViewData["search"]))
                {
                    <tr style="text-align: center">
                        <td>
                            @Html.DisplayFor(modelItem => item.BookTitle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AuthorName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Isbn)
                        </td>
                    </tr>
                }
            }
            </tbody>
        </table>
    </div>
</div>
